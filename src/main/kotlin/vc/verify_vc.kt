package vc

import id.walt.credentials.verification.Verifier
import id.walt.credentials.verification.models.PolicyRequest
import id.walt.credentials.verification.policies.JwtSignaturePolicy
import id.walt.did.dids.DidService

suspend fun main() {
    verify_vc()
}

suspend fun verify_vc() {
    // Initialise DID Service to be able to resolve DIDs
    DidService.minimalInit()
    println("Verify JWT signature: ")
    // W3C JWT Credential
    val signedCredentialJWT =
        "eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa3B5ZWYxdXpidnc2RzY2N1hhc3ZvQXR3UUJjb3Rlcm9SNXBWZGVhcEo4c2tDIn0.eyJpc3MiOiJkaWQ6a2V5Ono2TWtweWVmMXV6YnZ3Nkc2NjdYYXN2b0F0d1FCY290ZXJvUjVwVmRlYXBKOHNrQyIsInN1YiI6ImRpZDprZXk6ejZNa2V4ZzdHVVluMXpaSEtFUm5vUlBqWjM2YVVQdkFqb3g2MW1Vcmljelh6MmJNIiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL29iL3YzcDAvY29udGV4dC0zLjAuMi5qc29uIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJPcGVuQmFkZ2VDcmVkZW50aWFsIl0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7InR5cGUiOlsiQWNoaWV2ZW1lbnRTdWJqZWN0Il0sImFjaGlldmVtZW50Ijp7ImlkIjoidXJuOnV1aWQ6YWMyNTRiZDUtOGZhZC00YmIxLTlkMjktZWZkOTM4NTM2OTI2IiwidHlwZSI6WyJBY2hpZXZlbWVudCJdLCJuYW1lIjoiSkZGIHggdmMtZWR1IFBsdWdGZXN0IDMgSW50ZXJvcGVyYWJpbGl0eSIsImRlc2NyaXB0aW9uIjoiVGhpcyB3YWxsZXQgc3VwcG9ydHMgdGhlIHVzZSBvZiBXM0MgVmVyaWZpYWJsZSBDcmVkZW50aWFscyBhbmQgaGFzIGRlbW9uc3RyYXRlZCBpbnRlcm9wZXJhYmlsaXR5IGR1cmluZyB0aGUgcHJlc2VudGF0aW9uIHJlcXVlc3Qgd29ya2Zsb3cgZHVyaW5nIEpGRiB4IFZDLUVEVSBQbHVnRmVzdCAzLiIsImNyaXRlcmlhIjp7InR5cGUiOiJDcml0ZXJpYSIsIm5hcnJhdGl2ZSI6IldhbGxldCBzb2x1dGlvbnMgcHJvdmlkZXJzIGVhcm5lZCB0aGlzIGJhZGdlIGJ5IGRlbW9uc3RyYXRpbmcgaW50ZXJvcGVyYWJpbGl0eSBkdXJpbmcgdGhlIHByZXNlbnRhdGlvbiByZXF1ZXN0IHdvcmtmbG93LiBUaGlzIGluY2x1ZGVzIHN1Y2Nlc3NmdWxseSByZWNlaXZpbmcgYSBwcmVzZW50YXRpb24gcmVxdWVzdCwgYWxsb3dpbmcgdGhlIGhvbGRlciB0byBzZWxlY3QgYXQgbGVhc3QgdHdvIHR5cGVzIG9mIHZlcmlmaWFibGUgY3JlZGVudGlhbHMgdG8gY3JlYXRlIGEgdmVyaWZpYWJsZSBwcmVzZW50YXRpb24sIHJldHVybmluZyB0aGUgcHJlc2VudGF0aW9uIHRvIHRoZSByZXF1ZXN0b3IsIGFuZCBwYXNzaW5nIHZlcmlmaWNhdGlvbiBvZiB0aGUgcHJlc2VudGF0aW9uIGFuZCB0aGUgaW5jbHVkZWQgY3JlZGVudGlhbHMuIn0sImltYWdlIjp7ImlkIjoiaHR0cHM6Ly93M2MtY2NnLmdpdGh1Yi5pby92Yy1lZC9wbHVnZmVzdC0zLTIwMjMvaW1hZ2VzL0pGRi1WQy1FRFUtUExVR0ZFU1QzLWJhZGdlLWltYWdlLnBuZyIsInR5cGUiOiJJbWFnZSJ9fSwiaWQiOiJkaWQ6a2V5Ono2TWtzRm5heDZ4Q0JXZG82aGhmWjdwRXNieWFxOU1NTmRtQUJTMU5yY0NEWkpyMyJ9LCJpZCI6InVybjp1dWlkOjQxNzdlMDQ4LTlhNGEtNDc0ZS05ZGM2LWFlZDRlNjFhNjQzOSIsImlzc3VlciI6ImRpZDprZXk6ejZNa3NGbmF4NnhDQldkbzZoaGZaN3BFc2J5YXE5TU1OZG1BQlMxTnJjQ0RaSnIzIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wMS0xN1QxMzo1OToyNS44MjM4NzZaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDI0LTAxLTE5VDEzOjU5OjI1LjgyNDQ0MloiLCJuYW1lIjoiSkZGIHggdmMtZWR1IFBsdWdGZXN0IDMgSW50ZXJvcGVyYWJpbGl0eSJ9fQ.GXkviEo6ma3YnRjmoPVM1v_hsvMJoOf4TU8MDDmPxnXwBogBsE11vs1pNjZ0Mx8EcqoYo5INYp_uoNcsY2sZDw"

    /// Verify the JWT Credential:
    val resultsJWT = Verifier.verifyCredential(
        signedCredentialJWT,
        listOf(
            PolicyRequest(JwtSignaturePolicy())
            // other policies ...
        )
    )
    resultsJWT.forEach { verification ->
        println("[${verification.request.policy.name}] -> Success=${verification.isSuccess()}, Result=${verification.result}")
    }
    val signedCredentialSDJWT =
        "eyJjdHkiOiJjcmVkZW50aWFsLWNsYWltcy1zZXQranNvbiIsInR5cCI6InZjK3NkLWp3dCIsImFsZyI6IkVkRFNBIiwia2lkIjoiZGlkOmtleTp6bVlnOWJnS21SaUNxVFRkOU1BMXVmVkU5dGZ6VXB0d1FwNEdNUnhwdFhxdUpXdzRVajVkNFIyVXY3VFlUMkhzYndyMm1yVTJtaFl5bUtHSEUyUnJKdnpyVGZNRnp0MkFiY05WYjhyNnBEQ2F1UDNjeCJ9.eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vcHVybC5pbXNnbG9iYWwub3JnL3NwZWMvb2IvdjNwMC9jb250ZXh0LTMuMC4yLmpzb24iXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIk9wZW5CYWRnZUNyZWRlbnRpYWwiXSwiaWQiOiJ1cm46dXVpZDo0MTc3ZTA0OC05YTRhLTQ3NGUtOWRjNi1hZWQ0ZTYxYTY0MzkiLCJpc3N1ZXIiOiJkaWQ6a2V5OnptWWc5YmdLbVJpQ3FUVGQ5TUExdWZWRTl0ZnpVcHR3UXA0R01SeHB0WHF1Sld3NFVqNWQ0UjJVdjdUWVQySHNid3IybXJVMm1oWXltS0dIRTJSckp2enJUZk1GenQyQWJjTlZiOHI2cERDYXVQM2N4IiwiaXNzdWFuY2VEYXRlIjoiMjAyMy0wOC0wMlQwODowMzoxM1oiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJ0eXBlIjpbIkFjaGlldmVtZW50U3ViamVjdCJdLCJpZCI6ImRpZDprZXk6ejRNWGoxd0J6aTlqVXN0eVBWMlhLcFRGNGJzRUUzbWNxcUo5YXkyZkhSZHhiWTFRYnpSck1mNVBEcFZINGV2SndNVnNiZWhHOEJESjRUVkM0TUVFOVU4QmhqeGFFMzRrM0gzN1o4azFzY2FWODRpbWc3RWFNSEFkd1pOVkZIdlhUZWpNaGFpZENYMUVWUWpETlduWUVONEVnenQ4Z051RUx6Y1pMODZ1c3Y4NDJ2NUpMaXFaNHhWS0pqRENERGV3QmhhaU5NYkdRd1ZOd2lkN2tpWHRSOTZiZHl0RTJpUFJZc0pEMkxpaGt2WHdBdld0ckdHaVBZdnVyTmNuejFpVUgxaVRvdDRGZGpmS201VG00UHJiNEN5RG5FS2FpNE1HdmROS1FXV1RQaFhGNUxFb3NxYUdjYzFob2ZmcHdIWTdkbTM5ZUxCN3lDZWtHVmFLYWI0VTJ5cUxpV3RzYUtCcjZ2R1Rwa2ZUaDJlbkFhbkxLTnltYSIsImFjaGlldmVtZW50Ijp7ImlkIjoidXJuOnV1aWQ6YWMyNTRiZDUtOGZhZC00YmIxLTlkMjktZWZkOTM4NTM2OTI2IiwidHlwZSI6WyJBY2hpZXZlbWVudCJdLCJuYW1lIjoiSkZGIHggdmMtZWR1IFBsdWdGZXN0IDMgSW50ZXJvcGVyYWJpbGl0eSIsImRlc2NyaXB0aW9uIjoiVGhpcyB3YWxsZXQgc3VwcG9ydHMgdGhlIHVzZSBvZiBXM0MgVmVyaWZpYWJsZSBDcmVkZW50aWFscyBhbmQgaGFzIGRlbW9uc3RyYXRlZCBpbnRlcm9wZXJhYmlsaXR5IGR1cmluZyB0aGUgcHJlc2VudGF0aW9uIHJlcXVlc3Qgd29ya2Zsb3cgZHVyaW5nIEpGRiB4IFZDLUVEVSBQbHVnRmVzdCAzLiIsImNyaXRlcmlhIjp7InR5cGUiOiJDcml0ZXJpYSIsIm5hcnJhdGl2ZSI6IldhbGxldCBzb2x1dGlvbnMgcHJvdmlkZXJzIGVhcm5lZCB0aGlzIGJhZGdlIGJ5IGRlbW9uc3RyYXRpbmcgaW50ZXJvcGVyYWJpbGl0eSBkdXJpbmcgdGhlIHByZXNlbnRhdGlvbiByZXF1ZXN0IHdvcmtmbG93LiBUaGlzIGluY2x1ZGVzIHN1Y2Nlc3NmdWxseSByZWNlaXZpbmcgYSBwcmVzZW50YXRpb24gcmVxdWVzdCwgYWxsb3dpbmcgdGhlIGhvbGRlciB0byBzZWxlY3QgYXQgbGVhc3QgdHdvIHR5cGVzIG9mIHZlcmlmaWFibGUgY3JlZGVudGlhbHMgdG8gY3JlYXRlIGEgdmVyaWZpYWJsZSBwcmVzZW50YXRpb24sIHJldHVybmluZyB0aGUgcHJlc2VudGF0aW9uIHRvIHRoZSByZXF1ZXN0b3IsIGFuZCBwYXNzaW5nIHZlcmlmaWNhdGlvbiBvZiB0aGUgcHJlc2VudGF0aW9uIGFuZCB0aGUgaW5jbHVkZWQgY3JlZGVudGlhbHMuIn0sImltYWdlIjp7ImlkIjoiaHR0cHM6Ly93M2MtY2NnLmdpdGh1Yi5pby92Yy1lZC9wbHVnZmVzdC0zLTIwMjMvaW1hZ2VzL0pGRi1WQy1FRFUtUExVR0ZFU1QzLWJhZGdlLWltYWdlLnBuZyIsInR5cGUiOiJJbWFnZSJ9fX0sIl9zZCI6WyJtMmtmX2tta3l2aFBLZWNINVR2ZE11RHl0ZXc3SGprdWdlTUFIVGxJYzJjIiwiVGxUTmRNYzlmNk44c2lYbmlIVlkzRTB4OGtRckRqMGtxMjV5RkpzcXZDayJdfQ.Eq9QRqgIw4Lh0tzwnPwqS9KYRX-V_z2B4f_lTqImbx_Y515OrYX9PpRLgorIm3jwOWII9Mn-aiDkimD7EsvNDg~WyJncnhFbEFIQlhoc0FycE5qSlVoTk5RPT0iLCJuYW1lIiwiSkZGIHggdmMtZWR1IFBsdWdGZXN0IDMgSW50ZXJvcGVyYWJpbGl0eSJd"


    println("\nVerify SD-JWT signature: ")
    val resultsSDJWT = Verifier.verifyCredential(
        signedCredentialSDJWT,
        listOf(
            PolicyRequest(JwtSignaturePolicy())
            // other policies ...
        )
    )
    resultsSDJWT.forEach { verification ->
        println("[${verification.request.policy.name}] -> Success=${verification.isSuccess()}, Result=${verification.result}")
    }
}
